# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""AuditActionEnum"""
enum AuditActionEnum {
  INSERT
  RECOVER
  REMOVE
  SOFT_REMOVE
  UPDATE
}

type AuditLog {
  action: AuditActionEnum!
  createdAt: DateTime!
  entityId: ID!
  id: ID!
  input: String!
  newEntity: JSONObject!
  previousEntity: JSONObject!
  requestId: String!
  tableName: String!
  updatedAt: DateTime!
  user: User!
  userId: ID!
}

input CreateDomain01Input {
  """domain0101"""
  domain0101: Int
}

type CreateDomain01Output {
  domain01: Domain01!
}

input CreateDomain03Input {
  """boolean"""
  domain0301: Boolean

  """int"""
  domain0302: Int

  """varchar"""
  domain0303: String

  """date"""
  domain0304: Date

  """decimal"""
  domain0305: Decimal

  """enum"""
  domain0306: Domain03StatusEnum

  """jsonb"""
  domain0307: JSONObject

  """json"""
  domain0308: JSONObject

  """Array<int>"""
  domain0311: [Int!]

  """timestamp"""
  domain0312: DateTime

  """timestamp with time zone"""
  domain0313: DateTime

  """timestamp without time zone (same as timestamp)"""
  domain0314: DateTime
}

type CreateDomain03Output {
  domain03: Domain03!
}

input CreateDomain08Input {
  """domain09s"""
  domain09s: [CreateDomain09Input!]!

  """domain0801"""
  domain0801: Int
}

type CreateDomain08Output {
  domain08: Domain08!
}

input CreateDomain09Input {
  """domain0901"""
  domain0901: Int

  """domain10s"""
  domain10s: [CreateDomain10Input!]!
}

input CreateDomain10Input {
  """domain1001"""
  domain1001: Int
}

input CreateDomain15Input {
  """domain1501"""
  domain1501: Int
}

type CreateDomain15Output {
  domain15: Domain15!
}

input CreateDomain21Input {
  """domain2101"""
  domain2101: Int

  """parent ID"""
  parentId: ID
}

type CreateDomain21Output {
  domain21: Domain21!
}

input CreateDomain21sDomain21Input {
  """domain2101"""
  domain2101: Int
  id: ID!

  """parent ID"""
  parentId: ID
}

input CreateDomain21sInput {
  domain21s: [CreateDomain21sDomain21Input!]!
}

type CreateDomain21sOutput {
  domain21s: [Domain21!]!
}

input CreateDomain22Input {
  """domain2201"""
  domain2201: Int

  """parent ID"""
  parentId: ID
}

type CreateDomain22Output {
  domain22: Domain22!
}

input CreateDomain22sDomain22Input {
  """domain2201"""
  domain2201: Int
  id: ID!

  """parent ID"""
  parentId: ID
}

input CreateDomain22sInput {
  domain22s: [CreateDomain22sDomain22Input!]!
}

type CreateDomain22sOutput {
  domain22s: [Domain22!]!
}

input CreateDomain24Input {
  """domain2401"""
  domain2401: Int
}

type CreateDomain24Output {
  domain24: Domain24!
}

input CreateDomain25Input {
  """domain2501"""
  domain2501: Int
}

type CreateDomain25Output {
  domain25: Domain25!
}

input CreateUserInput {
  email: String!
  password: String!
}

type CreateUserOutput {
  user: User!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""A decimal string, such as 1.234, compliant with decimal.js format."""
scalar Decimal

type Domain01 implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID

  """domain0101"""
  domain0101: Int
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain01OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """domain0101"""
  domain0101: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain01Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain01!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input Domain01WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID

  """domain0101"""
  domain0101: Int
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type Domain03 implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID

  """boolean"""
  domain0301: Boolean

  """int"""
  domain0302: Int

  """varchar"""
  domain0303: String

  """date"""
  domain0304: Date

  """decimal"""
  domain0305: Decimal

  """enum"""
  domain0306: Domain03StatusEnum

  """jsonb"""
  domain0307: JSONObject

  """json"""
  domain0308: JSONObject

  """VirtualColumn"""
  domain0309: Int!

  """Array<int>"""
  domain0311: [Int!]

  """timestamp"""
  domain0312: DateTime

  """timestamp with time zone"""
  domain0313: DateTime

  """timestamp without time zone (same as timestamp)"""
  domain0314: DateTime
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain03OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """boolean"""
  domain0301: NodeOrderEnum

  """int"""
  domain0302: NodeOrderEnum

  """varchar"""
  domain0303: NodeOrderEnum

  """date"""
  domain0304: NodeOrderEnum

  """decimal"""
  domain0305: NodeOrderEnum

  """enum"""
  domain0306: NodeOrderEnum

  """jsonb"""
  domain0307: NodeOrderEnum

  """json"""
  domain0308: NodeOrderEnum

  """VirtualColumn"""
  domain0309: NodeOrderEnum

  """Array<int>"""
  domain0311: NodeOrderEnum

  """timestamp"""
  domain0312: NodeOrderEnum

  """timestamp with time zone"""
  domain0313: NodeOrderEnum

  """timestamp without time zone (same as timestamp)"""
  domain0314: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain03Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain03!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

"""status"""
enum Domain03StatusEnum {
  ACTIVE
  INACTIVE
}

input Domain03WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID

  """boolean"""
  domain0301: Boolean

  """int"""
  domain0302: Int

  """varchar"""
  domain0303: String

  """date"""
  domain0304: Date

  """enum"""
  domain0306: Domain03StatusEnum

  """VirtualColumn"""
  domain0309: Int

  """timestamp"""
  domain0312: DateTime

  """timestamp with time zone"""
  domain0313: DateTime

  """timestamp without time zone (same as timestamp)"""
  domain0314: DateTime
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type Domain08 implements Domain09sByDomain08Id & MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID

  """OneToMany"""
  domain09s: [Domain09!]!

  """domain0801"""
  domain0801: Int
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain08OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """domain0801"""
  domain0801: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain08Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain08!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input Domain08WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID
  domain09s: Domain09WhereInput

  """domain0801"""
  domain0801: Int
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type Domain09 implements Domain10sByDomain09Id & MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  domain08: Domain08!
  domain08Id: ID!

  """domain0901"""
  domain0901: Int

  """OneToMany"""
  domain10s: [Domain10!]!
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

interface Domain09ById {
  domain09: Domain09
  domain09Id: ID
}

input Domain09WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID
  domain08Id: ID

  """domain0901"""
  domain0901: Int
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}

interface Domain09sByDomain08Id {
  domain09s: [Domain09!]
  id: ID!
}

type Domain10 implements Domain09ById & MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  domain09: Domain09!
  domain09Id: ID!

  """domain1001"""
  domain1001: Int
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

interface Domain10sByDomain09Id {
  domain10s: [Domain10!]
  id: ID!
}

type Domain15 implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID

  """domain1501"""
  domain1501: Int
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

type Domain21 implements MetaEntity {
  """tree children"""
  children: [Domain21!]
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID

  """domain2101"""
  domain2101: Int
  id: ID!

  """parent"""
  parent: Domain21

  """parent ID"""
  parentId: ID
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain21OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """domain2101"""
  domain2101: NodeOrderEnum

  """parent ID"""
  parentId: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain21Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain21!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input Domain21WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID

  """domain2101"""
  domain2101: Int
  id: ID

  """parent ID"""
  parentId: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type Domain22 implements MetaEntity {
  """tree children"""
  children: [Domain22!]
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID

  """domain2201"""
  domain2201: Int
  id: ID!

  """parent"""
  parent: Domain22

  """parent ID"""
  parentId: ID
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain22OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """domain2201"""
  domain2201: NodeOrderEnum

  """parent ID"""
  parentId: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain22Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain22!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input Domain22WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID

  """domain2201"""
  domain2201: Int
  id: ID

  """parent ID"""
  parentId: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type Domain24 implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  domain25s: [Domain25!]!

  """domain2401"""
  domain2401: Int
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain24OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """domain2401"""
  domain2401: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain24Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain24!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input Domain24WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID

  """domain2401"""
  domain2401: Int
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type Domain25 implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  domain24s: [Domain24!]!

  """domain2501"""
  domain2501: Int
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input Domain25OrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum

  """domain2501"""
  domain2501: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type Domain25Page implements NodePage {
  """Nodes in this page"""
  nodes: [Domain25!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input Domain25WhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID

  """domain2501"""
  domain2501: Int
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}

type ErrorType {
  customAuthenticationError: Boolean
  queryFailedError: Boolean
  typeORMError: Boolean
  unknownError: Boolean
  validatorError: Boolean
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

interface MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  id: ID!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

type Mutation {
  createDomain01(input: CreateDomain01Input!): CreateDomain01Output!
  createDomain03(input: CreateDomain03Input!): CreateDomain03Output!
  createDomain08(input: CreateDomain08Input!): CreateDomain08Output!
  createDomain15(input: CreateDomain15Input!): CreateDomain15Output!
  createDomain21(input: CreateDomain21Input!): CreateDomain21Output!
  createDomain21s(input: CreateDomain21sInput!): CreateDomain21sOutput!
  createDomain22(input: CreateDomain22Input!): CreateDomain22Output!
  createDomain22s(input: CreateDomain22sInput!): CreateDomain22sOutput!
  createDomain24(input: CreateDomain24Input!): CreateDomain24Output!
  createDomain25(input: CreateDomain25Input!): CreateDomain25Output!
  createUser(input: CreateUserInput!): CreateUserOutput!
  removeDomain01(input: RemoveDomain01Input!): RemoveDomain01Output!
  removeDomain03(input: RemoveDomain03Input!): RemoveDomain03Output!
  removeDomain08(input: RemoveDomain08Input!): RemoveDomain08Output!
  removeDomain21(input: RemoveDomain21Input!): RemoveDomain21Output!
  removeDomain22(input: RemoveDomain22Input!): RemoveDomain22Output!
  removeDomain24(input: RemoveDomain24Input!): RemoveDomain24Output!
  removeDomain25(input: RemoveDomain25Input!): RemoveDomain25Output!
  removeUser(input: RemoveUserInput!): RemoveUserOutput!
  revertAuditLog(input: RevertAuditLogInput!): RevertAuditLogOutput!
  signIn(input: SignInInput!): SignInOutput!
  testQueueEventsRaceCondition(input: CreateDomain15Input!): CreateDomain15Output!
  updateDomain01(input: UpdateDomain01Input!): UpdateDomain01Output!
  updateDomain03(input: UpdateDomain03Input!): UpdateDomain03Output!
  updateDomain08(input: UpdateDomain08Input!): UpdateDomain08Output!
  updateDomain08s(input: UpdateDomain08sInput!): UpdateDomain08sOutput!
  updateDomain21(input: UpdateDomain21Input!): UpdateDomain21Output!
  updateDomain22(input: UpdateDomain22Input!): UpdateDomain22Output!
  updateDomain24(input: UpdateDomain24Input!): UpdateDomain24Output!
  updateDomain25(input: UpdateDomain25Input!): UpdateDomain25Output!
  updateUser(input: UpdateUserInput!): UpdateUserOutput!
}

"""排序方式"""
enum NodeOrderEnum {
  """升冪"""
  ASC

  """降冪"""
  DESC
}

interface NodePage {
  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

"""Integers that will have a value of 0 or more."""
scalar NonNegativeInt

type Permission implements MetaEntity {
  action: PermissionActionEnum!
  conditions: JSONObject
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  id: ID!

  """角色"""
  roles: [Role!]
  subject: String!
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

enum PermissionActionEnum {
  CREATE
  DELETE
  MANAGE
  READ
  UPDATE
}

type Query {
  domain01(
    """查詢條件"""
    where: [Domain01WhereInput!]! = []
  ): Domain01
  domain01Page(
    """排序欄位與方式"""
    order: Domain01OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain01WhereInput!]! = []
  ): Domain01Page!
  domain03(id: ID!): Domain03!
  domain03Page(
    """排序欄位與方式"""
    order: Domain03OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain03WhereInput!]
  ): Domain03Page!
  domain08(id: ID!): Domain08!
  domain08Page(
    """排序欄位與方式"""
    order: Domain08OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain08WhereInput!]
  ): Domain08Page!
  domain21(id: ID!): Domain21!
  domain21Page(
    """排序欄位與方式"""
    order: Domain21OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain21WhereInput!]
  ): Domain21Page!
  domain22(id: ID!): Domain22!
  domain22Page(
    """排序欄位與方式"""
    order: Domain22OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain22WhereInput!]
  ): Domain22Page!
  domain24(id: ID!): Domain24!
  domain24Page(
    """排序欄位與方式"""
    order: Domain24OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain24WhereInput!]
  ): Domain24Page!
  domain25(id: ID!): Domain25!
  domain25Page(
    """排序欄位與方式"""
    order: Domain25OrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [Domain25WhereInput!]
  ): Domain25Page!
  error: ErrorType!
  me: User
  user(id: ID!): User!
  userPage(
    """排序欄位與方式"""
    order: UserOrderInput! = {}

    """Amount of nodes to skip from the beginning of this page"""
    skip: NonNegativeInt

    """Maximum amount of nodes in this page"""
    take: NonNegativeInt

    """查詢條件"""
    where: [UserWhereInput!]
  ): UserPage!
}

input RemoveDomain01Input {
  id: ID!
}

type RemoveDomain01Output {
  domain01: Domain01!
}

input RemoveDomain03Input {
  id: ID!
}

type RemoveDomain03Output {
  domain03: Domain03!
}

input RemoveDomain08Input {
  id: ID!
}

type RemoveDomain08Output {
  domain08: Domain08!
}

input RemoveDomain21Input {
  id: ID!
}

type RemoveDomain21Output {
  domain21: Domain21!
}

input RemoveDomain22Input {
  id: ID!
}

type RemoveDomain22Output {
  domain22: Domain22!
}

input RemoveDomain24Input {
  id: ID!
}

type RemoveDomain24Output {
  domain24: Domain24!
}

input RemoveDomain25Input {
  id: ID!
}

type RemoveDomain25Output {
  domain25: Domain25!
}

input RemoveUserInput {
  id: ID!
}

type RemoveUserOutput {
  user: User!
}

input RevertAuditLogInput {
  requestId: ID!
}

type RevertAuditLogOutput {
  auditLogs: [AuditLog!]!
}

type Role implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  id: ID!

  """角色名稱"""
  name: String!

  """權限"""
  permissions: [Permission!]
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input SignInInput {
  email: String!
  password: String!
}

type SignInOutput {
  accessToken: String!
}

input UpdateDomain01Input {
  """domain0101"""
  domain0101: Int
  id: ID!
}

type UpdateDomain01Output {
  domain01: Domain01!
}

input UpdateDomain03Input {
  """boolean"""
  domain0301: Boolean

  """int"""
  domain0302: Int

  """varchar"""
  domain0303: String

  """date"""
  domain0304: Date

  """decimal"""
  domain0305: Decimal

  """enum"""
  domain0306: Domain03StatusEnum

  """jsonb"""
  domain0307: JSONObject

  """json"""
  domain0308: JSONObject

  """Array<int>"""
  domain0311: [Int!]

  """timestamp"""
  domain0312: DateTime

  """timestamp with time zone"""
  domain0313: DateTime

  """timestamp without time zone (same as timestamp)"""
  domain0314: DateTime
  id: ID!
}

type UpdateDomain03Output {
  domain03: Domain03!
}

input UpdateDomain08Input {
  """domain09s"""
  domain09s: [UpdateDomain09Input!]

  """domain0801"""
  domain0801: Int
  id: ID!
}

type UpdateDomain08Output {
  domain08: Domain08!
}

input UpdateDomain08sInput {
  """domain08s"""
  domain08s: [UpdateDomain08Input!]!
}

type UpdateDomain08sOutput {
  domain08s: [Domain08!]!
}

input UpdateDomain09Input {
  """domain0901"""
  domain0901: Int

  """domain10s"""
  domain10s: [UpdateDomain10Input!]
  id: ID!
}

input UpdateDomain10Input {
  """domain1001"""
  domain1001: Int
  id: ID!
}

input UpdateDomain21Input {
  """domain2101"""
  domain2101: Int
  id: ID!

  """parent ID"""
  parentId: ID
}

type UpdateDomain21Output {
  domain21: Domain21!
}

input UpdateDomain22Input {
  """domain2201"""
  domain2201: Int
  id: ID!

  """parent ID"""
  parentId: ID
}

type UpdateDomain22Output {
  domain22: Domain22!
}

input UpdateDomain24Input {
  """domain2401"""
  domain2401: Int
  id: ID!
}

type UpdateDomain24Output {
  domain24: Domain24!
}

input UpdateDomain25Input {
  """domain2501"""
  domain2501: Int
  id: ID!
}

type UpdateDomain25Output {
  domain25: Domain25!
}

input UpdateUserInput {
  email: String
  id: ID!
  password: String
}

type UpdateUserOutput {
  user: User!
}

type User implements MetaEntity {
  createdAt: DateTime!
  createdUser: User
  createdUserId: ID
  deletedAt: DateTime
  deletedUser: User
  deletedUserId: ID
  email: String!
  id: ID!

  """角色"""
  roles: [Role!]
  updatedAt: DateTime!
  updatedUser: User
  updatedUserId: ID
}

input UserOrderInput {
  createdAt: NodeOrderEnum
  deletedAt: NodeOrderEnum
  email: NodeOrderEnum
  updatedAt: NodeOrderEnum
}

type UserPage implements NodePage {
  """Nodes in this page"""
  nodes: [User!]!

  """Amount of nodes to skip from the beginning of this page"""
  skip: NonNegativeInt

  """Maximum amount of nodes in this page"""
  take: NonNegativeInt

  """Total amount of nodes"""
  total: NonNegativeInt
}

input UserWhereInput {
  createdAt: DateTime
  createdUserId: ID
  deletedAt: DateTime
  deletedUserId: ID
  email: String
  id: ID
  updatedAt: DateTime
  updatedUserId: ID
}